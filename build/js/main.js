function changecol1(){document.getElementById("modal-close").style.background="#d2e7f6"}function changecol2(){document.getElementById("modal-close").style.background="#e0e9f0"}function changecol3(){document.getElementById("modal-close").style.background="#c3d5e2",document.getElementById("window-modal").style.display="none"}function modalopen(){document.getElementById("window-modal-box").style.display="block"}function slider1Left(){document.getElementById("typessliderboxes");if((left-=291)<-582&&(left=-582),left<-291)document.getElementById("1slider-left").style.background="url(../img/right-arrow-lite-blue.svg)";else document.getElementById("1slider-right").style.background="url(../img/right-arrow-blue.svg)";typessliderboxes.style.left=left+"px"}function slider1right(){document.getElementById("typessliderboxes");if((left+=291)>0&&(left=0),0==left)document.getElementById("1slider-right").style.background="url(../img/right-arrow-lite-blue.svg)";else document.getElementById("1slider-left").style.background="url(../img/right-arrow-blue.svg)";typessliderboxes.style.left=left+"px"}function slider2Left(){document.getElementById("reviewsboxesline");if((left-=390)<-1170&&(left=-1170),left<-780)document.getElementById("2slider-left").style.background="url(../img/right-arrow-lite-blue.svg)";else document.getElementById("2slider-right").style.background="url(../img/right-arrow-blue.svg)";reviewsboxesline.style.left=left+"px"}function slider2right(){document.getElementById("reviewsboxesline");if((left+=390)>0&&(left=0),0==left)document.getElementById("2slider-right").style.background="url(../img/right-arrow-lite-blue.svg)";else document.getElementById("2slider-left").style.background="url(../img/right-arrow-blue.svg)";reviewsboxesline.style.left=left+"px"}var options={strings:["VK","FACEBOOK","TELEGRAM","OK","VIBER"],typeSpeed:150,backSpeed:150,loop:!0,startDelay:0},typed=new Typed(".telega",options),left=0;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
